{
  "stats": {
    "suites": 5,
    "tests": 7,
    "passes": 0,
    "pending": 0,
    "failures": 7,
    "start": "2023-05-19T16:08:49.898Z",
    "end": "2023-05-19T16:08:49.965Z",
    "duration": 67,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9b352739-1a5e-48bb-808c-01abd762a031",
      "title": "",
      "fullFile": "C:\\Users\\Pascal\\Documents\\java-script-stuff\\Neue-Suite\\airportgap-spec\\spec\\newAirports.test.js",
      "file": "\\spec\\newAirports.test.js",
      "beforeHooks": [
        {
          "title": "Setup in \"{root}\"",
          "fullTitle": "Setup in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const hooks = getHooks();\nthis.test.parent.project = { ...options };\nfor (let i = 0; i < hooks.length; i++) {\n  addContext(this, hooks[i]);\n}\nthis.test.originalTitle = \"Setup\";\nthis.test.options = { empty: hooks.length === 0 };",
          "err": {},
          "uuid": "f0a1d5b1-6e12-427d-aca7-f93a60c82fb9",
          "parentUUID": "9b352739-1a5e-48bb-808c-01abd762a031",
          "isHook": true,
          "skipped": false,
          "options": {
            "empty": true
          }
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d705c2df-65d0-4aab-a946-4ff4213a8037",
          "title": "Airport Gap API",
          "fullFile": "C:\\Users\\Pascal\\Documents\\java-script-stuff\\Neue-Suite\\airportgap-spec\\spec\\newAirports.test.js",
          "file": "\\spec\\newAirports.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "09e6c9b6-d755-4963-b955-3b7e2fcd02ce",
              "title": "GET /airports",
              "fullFile": "C:\\Users\\Pascal\\Documents\\java-script-stuff\\Neue-Suite\\airportgap-spec\\spec\\newAirports.test.js",
              "file": "\\spec\\newAirports.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns all airports, limited to 30 per page",
                  "fullTitle": "Airport Gap API GET /airports returns all airports, limited to 30 per page",
                  "timedOut": false,
                  "duration": 50,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "api\n              .get(\"/airports\")\n              .expect(200)\n              .expect((res) => json.of(res.body.data.length).to.eql(30)",
                  "err": {
                    "message": "Error: getaddrinfo ENOTFOUND airportgap.dev-tester.com",
                    "estack": "Error: getaddrinfo ENOTFOUND airportgap.dev-tester.com\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:107:26)",
                    "diff": null
                  },
                  "uuid": "fce56bb1-872a-4c4a-b732-6b7350317aa2",
                  "parentUUID": "09e6c9b6-d755-4963-b955-3b7e2fcd02ce",
                  "isHook": false,
                  "skipped": false,
                  "options": {
                    "title": "returns all airports, limited to 30 per page",
                    "description": "Should pass."
                  }
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "fce56bb1-872a-4c4a-b732-6b7350317aa2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000,
              "options": {
                "title": "GET /airports",
                "description": "Returning all Airports.",
                "timeout": 15000
              }
            },
            {
              "uuid": "ca871280-731c-4cc6-a396-de6763ea57af",
              "title": "POST /airports/distance",
              "fullFile": "C:\\Users\\Pascal\\Documents\\java-script-stuff\\Neue-Suite\\airportgap-spec\\spec\\newAirports.test.js",
              "file": "\\spec\\newAirports.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "calculates the distance between two airports",
                  "fullTitle": "Airport Gap API POST /airports/distance calculates the distance between two airports",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "api\n              .post(\"/airports/distance\")\n              .send({ from: \"KIX\", to: \"SFO\" })\n              .expect(200)\n              .expect((res) =>\n                json\n                  .of(res.body.data.attributes)\n                  .to.include.keys(\"kilometers\", \"miles\", \"nautical_miles\")",
                  "err": {
                    "message": "Error: getaddrinfo ENOTFOUND airportgap.dev-tester.com",
                    "estack": "Error: getaddrinfo ENOTFOUND airportgap.dev-tester.com\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:107:26)",
                    "diff": null
                  },
                  "uuid": "0e33365f-6462-472b-b6f2-880cc30c97eb",
                  "parentUUID": "ca871280-731c-4cc6-a396-de6763ea57af",
                  "isHook": false,
                  "skipped": false,
                  "options": {
                    "title": "calculates the distance between two airports",
                    "description": "Should pass."
                  }
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "0e33365f-6462-472b-b6f2-880cc30c97eb"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000,
              "options": {
                "title": "POST /airports/distance",
                "description": "Calculating distance etc.",
                "timeout": 15000
              }
            },
            {
              "uuid": "4a6c0332-2d4a-4269-9804-84a9bc949d15",
              "title": "POST /favorites",
              "fullFile": "C:\\Users\\Pascal\\Documents\\java-script-stuff\\Neue-Suite\\airportgap-spec\\spec\\newAirports.test.js",
              "file": "\\spec\\newAirports.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "requires authentication",
                  "fullTitle": "Airport Gap API POST /favorites requires authentication",
                  "timedOut": false,
                  "duration": 2,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "api\n              .post(\"/favorites\")\n              .send({\n                airport_id: \"JFK\",\n                note: \"My usual layover when visiting family\",\n              })\n              .expect(401)",
                  "err": {
                    "message": "Error: getaddrinfo ENOTFOUND airportgap.dev-tester.com",
                    "estack": "Error: getaddrinfo ENOTFOUND airportgap.dev-tester.com\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:107:26)",
                    "diff": null
                  },
                  "uuid": "d3aa644e-29b8-43ba-b030-824c2bf093cc",
                  "parentUUID": "4a6c0332-2d4a-4269-9804-84a9bc949d15",
                  "isHook": false,
                  "skipped": false,
                  "options": {
                    "title": "requires authentication",
                    "description": "should pass"
                  }
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d3aa644e-29b8-43ba-b030-824c2bf093cc"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000,
              "options": {
                "title": "POST /favorites",
                "description": "Should not work, because not authorized",
                "timeout": 15000
              }
            },
            {
              "uuid": "02923999-c4a1-41f1-9d94-b1c97e98e491",
              "title": "POST /favorites",
              "fullFile": "C:\\Users\\Pascal\\Documents\\java-script-stuff\\Neue-Suite\\airportgap-spec\\spec\\newAirports.test.js",
              "file": "\\spec\\newAirports.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "allows an user to create favorite airports",
                  "fullTitle": "Airport Gap API POST /favorites allows an user to create favorite airports",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "api\n              .post(\"/favorites\")\n              .set(\"Authorization\", `Bearer token=TsxZ61MTN7cM7YJcu75raZmv`)\n              .send({\n                airport_id: \"JFK\",\n                note: \"My usual layover when visiting family\",\n              })\n              .expect(201)\n              .expect((res) =>\n                json\n                  .of(res.body.data.attributes.airport.name)\n                  .to.eql(\"John F Kennedy International Airport\")\n              )\n              .expect((res) =>\n                json\n                  .of(res.body.data.attributes.note)\n                  .to.eql(\"My usual layover when visiting family\")",
                  "err": {
                    "message": "Error: getaddrinfo ENOTFOUND airportgap.dev-tester.com",
                    "estack": "Error: getaddrinfo ENOTFOUND airportgap.dev-tester.com\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (node:dns:107:26)",
                    "diff": null
                  },
                  "uuid": "e597edc1-4ef6-4e54-9937-a9a99983e165",
                  "parentUUID": "02923999-c4a1-41f1-9d94-b1c97e98e491",
                  "isHook": false,
                  "skipped": false,
                  "options": {
                    "title": "allows an user to create favorite airports",
                    "description": "should pass"
                  }
                },
                {
                  "title": "allows an user to update favorite airports",
                  "fullTitle": "Airport Gap API POST /favorites allows an user to update favorite airports",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "api\n              .put(`/favorites/${api.body.data.id}`)\n              .set(\"Authorization\", `Bearer token=TsxZ61MTN7cM7YJcu75raZmv`)\n              .send({\n                note: \"My usual layover when visiting family and friends\",\n              })\n              .expect(200)\n              .expect((res) =>\n                json\n                  .of(res.body.data.attributes.airport.name)\n                  .to.eql(\"John F Kennedy International Airport\")\n              )\n              .expect((res) =>\n                json\n                  .of(res.body.data.attributes.note)\n                  .to.eql(\"My usual layover when visiting family and friends\")",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'data')",
                    "estack": "TypeError: Cannot read properties of undefined (reading 'data')\n    at Context.<anonymous> (file:///C:/Users/Pascal/Documents/java-script-stuff/Neue-Suite/airportgap-spec/spec/newAirports.test.js:117:43)\n    at Context.<anonymous> (node_modules\\@catsjs\\core\\interface.cjs:53:23)\n    at process.processImmediate (node:internal/timers:471:21)",
                    "diff": null
                  },
                  "uuid": "d47626c1-32dd-4afc-b535-966759a37d1a",
                  "parentUUID": "02923999-c4a1-41f1-9d94-b1c97e98e491",
                  "isHook": false,
                  "skipped": false,
                  "options": {
                    "title": "allows an user to update favorite airports",
                    "description": "should pass"
                  }
                },
                {
                  "title": "allows an user to delete favorite airports",
                  "fullTitle": "Airport Gap API POST /favorites allows an user to delete favorite airports",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "api\n              .delete(`/favorites/${api.body.data.id}`)\n              .set(\"Authorization\", `Bearer token=TsxZ61MTN7cM7YJcu75raZmv`)\n              .expect(204)",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'data')",
                    "estack": "TypeError: Cannot read properties of undefined (reading 'data')\n    at Context.<anonymous> (file:///C:/Users/Pascal/Documents/java-script-stuff/Neue-Suite/airportgap-spec/spec/newAirports.test.js:142:46)\n    at Context.<anonymous> (node_modules\\@catsjs\\core\\interface.cjs:53:23)\n    at process.processImmediate (node:internal/timers:471:21)",
                    "diff": null
                  },
                  "uuid": "c5f88e33-cba3-44db-a77e-a86260fcbbfc",
                  "parentUUID": "02923999-c4a1-41f1-9d94-b1c97e98e491",
                  "isHook": false,
                  "skipped": false,
                  "options": {
                    "title": "allows an user to delete favorite airports",
                    "description": "should pass"
                  }
                },
                {
                  "title": "Verify that the record was deleted",
                  "fullTitle": "Airport Gap API POST /favorites Verify that the record was deleted",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "api\n              .get(`/favorites/${api.body.data.id}`)\n              .set(\"Authorization\", `Bearer token=TsxZ61MTN7cM7YJcu75raZmv`)\n              .expect(404)",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'data')",
                    "estack": "TypeError: Cannot read properties of undefined (reading 'data')\n    at Context.<anonymous> (file:///C:/Users/Pascal/Documents/java-script-stuff/Neue-Suite/airportgap-spec/spec/newAirports.test.js:153:43)\n    at Context.<anonymous> (node_modules\\@catsjs\\core\\interface.cjs:53:23)\n    at process.processImmediate (node:internal/timers:471:21)",
                    "diff": null
                  },
                  "uuid": "f0eaeec9-92fd-4ecd-b57d-4ddd85153430",
                  "parentUUID": "02923999-c4a1-41f1-9d94-b1c97e98e491",
                  "isHook": false,
                  "skipped": false,
                  "options": {
                    "title": "Verify that the record was deleted",
                    "description": "should pass"
                  }
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "e597edc1-4ef6-4e54-9937-a9a99983e165",
                "d47626c1-32dd-4afc-b535-966759a37d1a",
                "c5f88e33-cba3-44db-a77e-a86260fcbbfc",
                "f0eaeec9-92fd-4ecd-b57d-4ddd85153430"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 15000,
              "options": {
                "title": "POST /favorites",
                "description": "Should work, because authorized",
                "timeout": 15000
              }
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "Airport Gap API",
            "description": "This example spec uses the [Airport Gap API](https://airportgap.dev-tester.com/api)."
          }
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "index",
        "inline": true,
        "code": true,
        "charts": true,
        "saveJson": true,
        "saveHtml": true,
        "htmlModule": "@catsjs/report",
        "showSkipped": true,
        "showPending": true,
        "showHooks": "always"
      },
      "version": "6.2.0"
    },
    "cats": {
      "name": "cats",
      "version": "1.0.0-beta.2",
      "link": "https://github.com/catsjs/cats",
      "options": {}
    }
  },
  "project": {
    "title": "airportgap-spec",
    "description": null,
    "api": "https://airportgap.dev-tester.com/api",
    "protocol": {
      "plugin": "@catsjs/http"
    },
    "contentTypes": [
      "@catsjs/json"
    ],
    "verbose": false,
    "name": "airportgap-spec",
    "version": "1.0.0",
    "mocha": {
      "ui": "@catsjs/core/interface",
      "reporter": "@catsjs/core/reporter",
      "require": [
        "@catsjs/core/dsl",
        "@catsjs/core/hooks"
      ],
      "spec": "spec",
      "recursive": true,
      "timeout": "60s",
      "slow": "500ms"
    }
  }
}